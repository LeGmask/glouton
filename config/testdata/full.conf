agent:
  cloudimage_creation_file: "cloudimage_creation"
  facts_file: "facts.yaml"
  http_debug:
    enable: true
    bind_address: "localhost:6060"
  installation_format: "manual"
  netstat_file: "netstat.out"
  state_file: "state.json"
  state_cache_file: "state.cache.json"
  state_reset_file: "state.reset"
  deprecated_state_file: "state.deprecated"
  upgrade_file: "upgrade"
  auto_upgrade_file: "auto-upgrade"
  node_exporter:
    enable: true
    collectors: ["disk"]
  process_exporter:
    enable: true
  public_ip_indicator: "https://myip.bleemeo.com"
  windows_exporter:
    enable: true
    collectors: ["cpu"]
  telemetry:
    enable: true
    address: "http://example.com"
  metrics_format: prometheus

blackbox:
  enable: true
  scraper_name: "name"
  scraper_send_uuid: true
  targets:
    - name: myname
      url: https://bleemeo.com
      module: mymodule
  modules:
    mymodule:
      prober: "http"
      http:
        preferred_ip_protocol: "ip4"
        valid_status_codes: [200]
        fail_if_ssl: true
  user_agent: "my-user-agent"

bleemeo:
  account_id: "myid"
  api_base: "https://api.bleemeo.com/"
  api_ssl_insecure: true
  container_registration_delay_seconds: 30
  enable: true
  initial_agent_name: "name1"
  initial_server_group_name: "name2"
  initial_server_group_name_for_snmp: "name3"
  mqtt:
    cafile: "/myca"
    host: "mqtt.bleemeo.com"
    port: 8883
    ssl_insecure: true
    ssl: true
  registration_key: "mykey"
  sentry:
    dsn: "my-dsn"

container:
  filter:
    allow_by_default: true
    allow_list:
      - redis
    deny_list:
      - postgres
  type: "docker"
  pid_namespace_host: true
  runtime:
    docker:
      addresses:
        - "unix:///run/docker.sock"
      prefix_hostroot: true
    containerd:
      addresses:
        - "/run/containerd/containerd.sock"
      prefix_hostroot: true

df:
  host_mount_point: "/host-root"
  path_ignore:
    - /
  ignore_fs_type:
    - tmpfs

disk_ignore:
  - "^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\\d+n\\d+p)\\d+$"

disk_monitor:
  - "sda"

influxdb:
  enable: true
  host: "localhost"
  port: 8086
  db_name: "metrics"
  tags:
    mytag: myvalue

jmx:
  enable: true

jmxtrans:
  config_file: "/var/lib/jmxtrans/glouton-generated.json"
  file_permission: "0640"
  graphite_port: 2004

kubernetes:
  enable: true
  nodename: "mynode"
  clustername: "mycluster"
  kubeconfig: "/config"

logging:
  buffer:
    head_size_bytes: 500000
    tail_size_bytes: 500000
  level: "INFO"
  output: "console"
  filename: "name"
  package_levels: "bleemeo=1"

metric:
  allow_metrics:
    - allowed
  deny_metrics:
    - denied
  include_default_metrics: true
  prometheus:
    targets:
      - url: "http://localhost:8080/metrics"
        name: "my_app"
        allow_metrics:
          - metric1
        deny_metrics:
          - metric2
  softstatus_period_default: 100
  softstatus_period:
    system_pending_updates: 100
    system_pending_security_updates: 200
  snmp:
    exporter_address: "localhost"
    targets:
      - initial_name: AP Wifi
        target: 127.0.0.1

mqtt:
  enable: true
  hosts:
    - localhost
  port: 1883
  username: "user"
  password: "pass"
  ssl: true
  ssl_insecure: true
  ca_file: "/myca"

network_interface_blacklist:
  - lo
  - veth

nrpe:
  enable: true
  address: "0.0.0.0"
  port: 5666
  ssl: true
  conf_paths:
    - "/etc/nagios/nrpe.cfg"

nvidia_smi:
  enable: true
  bin_path: "/usr/bin/nvidia-smi"
  timeout: 5

service:
  - id: "service1"
    instance: "instance1"
    port: 8080
    ignore_ports:
      - 8081
    address: "127.0.0.1"
    interval: 60
    check_type: "nagios"
    http_path: "/check/"
    http_status_code: 200
    http_host: "host"
    match_process: "/usr/bin/dockerd"
    check_command: "/path/to/bin --with-option"
    nagios_nrpe_name: "nagios"
    metrics_unix_socket: "/path/mysql.sock"
    username: "user"
    password: "password"
    stats_url: "http://nginx/stats"
    mgmt_port: 9090
    cassandra_detailed_tables:
      - "squirreldb.data"
    jmx_port: 1200
    jmx_username: "jmx_user"
    jmx_password: "jmx_pass"
    jmx_metrics:
      - name: heap_size_mb
        mbean: java.lang:type=Memory
        attribute: HeapMemoryUsage
        path: used
        scale: 0.1
        derive: True
        sum: true
        ratio: "a"
        type_names:
          - "name"

service_ignore_metrics:
  - name: "redis"
    instance: "host:*"

service_ignore_check:
  - name: "postgresql"
    instance: "host:* container:*"

stack: "mystack"

tags:
  - mytag

telegraf:
  docker_metrics_enable: true
  statsd:
    enable: true
    address: "127.0.0.1"
    port: 8125

thresholds:
  cpu_used:
    low_warning: 2
    low_critical: 1.5
    high_warning: 80.2
    high_critical: 90
  disk_used:
    low_critical: 2
    high_warning: 90.5

web:
  enable: true
  local_ui:
    enable: true
  listener:
    address: "192.168.0.1"
    port: 8016
  static_cdn_url: "/"

zabbix:
  enable: true
  address: "zabbix"
  port: 7000
