type Label {
  key: String!
  value: String!
}

type Point {
  time: Time!
  value: Float!
}

type Metric {
  name: String!
  labels: [Label!]!
  points: [Point!]
}

type Container {
  command: String!
  createdAt: Time
  id: String!
  image: String!
  inspectJSON: String!
  name: String!
  startedAt: Time
  state: String!
  finishedAt: Time
  ioWriteBytes: Float!
  ioReadBytes: Float!
  netBitsRecv: Float!
  netBitsSent: Float!
  memUsedPerc: Float!
  cpuUsedPerc: Float!
}

input LabelInput {
  key: String!
  value: String!
}

input Pagination {
  offset: Int!
  limit: Int!
}

type Query {
  metrics(labels: [LabelInput!]!): [Metric!]!
  points(labels: [LabelInput!]!, start: String!, end: String!, minutes: Int!): [Metric!]!
  containers(input: Pagination): [Container!]!
}

scalar Time
