# Glouton configuration files are written in yaml.
#
# Configuration could be overridden by files under
# /etc/glouton/conf.d/*.conf
# We suggest to create a file under that folder and leave this
# file unchanged.
#
# Files from the conf.d folder are read in dictonary order (e.g.
# 00-defaults.conf is read before 99-custom.conf)

# You can configure tags for your agent
#tags:
#    - web-server
#    - application-1
#    - ...

# The full documentation with all available options is available at https://go.bleemeo.com/l/agent-configuration

logging:
    # level is the verbosity level. 0 is the default and minimal value.
    # The bigger this number is, the more logs are shown.
    # Currently 3 is the highest value.
    # It also possible to use:
    # * "INFO" which is the same as level 0
    # * "VERBOSE" which is the same as level 1
    # * "DEBUG" which is the same as level 2
    level: INFO
    # output can be set to "console", "syslog" or "file".
    output: console
    # If output is "file", filename is used to write logs.
    # filename: /tmp/glouton.log

# Glouton has a local interface accessible at http://localhost:8015 by default.
# You can disable it with the following:
# web:
#    enable: False

# You can define a threshold on ANY metric. You only need to know it's name and
# add an entry like this one:
#   metric_name:
#       low_critical: 1.0
#       low_warning: 2.0
#       high_warning: 3
#       high_critical: 4.2
# You can omit any of the above 4 threshold (or explicitly set it to null).
#
thresholds:
    cpu_used:
        # When cpu_used grow above 90% it is critical. 80 % is warning.
        high_warning: 80
        high_critical: 90
    disk_used_perc:
        high_warning: 80
        high_critical: 90
    mem_used_perc:
        high_warning: 80
        high_critical: 90
    io_utilisation:
        high_warning: 80
        high_critical: 90

# Ignore all network interface starting with one of those prefix
network_interface_denylist:
    - docker
    - lo
    - veth
    - virbr
    - vnet
    - isatap
    - fwbr
    - fwpr
    - fwln

# Ignore file systems under the following path
df:
    ignore_fs_type:
        - ^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
        - tmpfs
        - efivarfs
        - .*gvfs.*
    path_ignore:
        - /var/lib/docker/aufs
        - /var/lib/docker/overlay
        - /var/lib/docker/overlay2
        - /var/lib/docker/devicemapper
        - /var/lib/docker/vfs
        - /var/lib/docker/btrfs
        - /var/lib/docker/zfs
        - /var/lib/docker/plugins
        - /var/lib/docker/containers
        - /snap
        - /run/docker/runtime-runc

# Disk to monitor IO statistics
disk_ignore:
    # Ignore some devices
    - "^(bcache|dm-|fd|loop|ram|sr|zd|zram)\\d+$"
    # Ignore parition (sda1 like, not pN)
    - "^((h|rss|s|v|xv)d[a-z]+|fio[a-z]+)\\d+$"
    # Ignore partition (pN like)
    - "^(drbd|md|mmcblk|nbd|nvme\\d+n|rbd|rsxx|skd)\\d+p\\d+$",

metric:
    softstatus_period:
        system_pending_updates: 86400
        system_pending_security_updates: 86400
        time_elapsed_since_last_data: 0
        time_drift: 0
    # softstatus_period_default: 300

# Additional metric could be retrived over HTTP(s) by the agent.
#
# It expect response to be only one number in a text/plain response.
#
# Example of metrics:
# metric:
#   pull:
#       the_name_of_your_metric:
#           url: http://localhost:8080/myapp/metric/users_count
#           item: myapp  # item to add to the metric. Default to none
#           ssl_check: true  # should SSL certificate be checked? Default to yes
#           interval: 10  # retrive the metric every N seconds, default to 10


# Some discovered service may need additional information to gather metrics,
# for example MySQL needs a username and password.
# Another use case could be a service listening on a different port or address
# than the default one.
#
# You could provide this information through "service" configuration:
#
# service:
#     - id: mysql
#       #instance: container-name     # If your MySQL is running in a container,
#                                     # specify instance and the container name
#       #address: 127.0.0.1           # Override the address discovered
#       #port: 3306                   # Override the port discovered
#       #nagios_nrpe_name: check_name # Optional, set an exposed name for NRPE
#       username: root
#       password: root
#     - id: rabbitmq
#       username: guest
#       password: guest
#       stats_port: 15672          # Port of RabbitMQ management interface

# Additional check (TCP or HTTP), Nagios or process check could be defined to
# monitor custom processes.
#
# Example of check:
# service:
#     - id: the_name_of_your_service
#       port: 8080                      # TCP port of your service
#       address: 127.0.0                # Optional, default to 127.0.0.1
#       check_type: http                # Optional, default to "tcp".
#                                       # Could be either "http" or "tcp"
#       nagios_nrpe_name: check_name    # Optional, exposed name for NRPE
#     - id: other_name_of_service
#       check_type: nagios
#       check_command: /path/to/check_service --with-argument-if-applicable
#       # Optionally you can specify an address and TCP port. Glouton
#       # will connect to this port, if connection is closed, agent will
#       # immediately call your check command instead of waiting up to
#       # one minute.
#       address: 127.0.0.1
#       port: 1234
#
#     - id: process_check_name
#       check_type: process
#       # match_process supports regular expressions with RE2 syntax, see https://github.com/google/re2/wiki/Syntax.
#       match_process: "/usr/bin/mycommand --args"

# To enable NRPE with glouton
# nrpe:
#     enable: true
#     conf_paths:                        # Give to glouton where the nrpe
#                                       # configuration files are located
#         - /etc/nagios/nrpe.cfg
#         - /etc/nagios/nrpe.d/my_conf.cfg
