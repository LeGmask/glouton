apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-06T13:07:36Z"
    generateName: crash-loop-7665f6d468-
    labels:
      app: crash-loop
      pod-template-hash: 7665f6d468
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ba16e26e-4736-4bdd-bb0e-7175c15b7f37"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"false"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T13:07:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T13:07:45Z"
    name: crash-loop-7665f6d468-c5kwh
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: crash-loop-7665f6d468
      uid: ba16e26e-4736-4bdd-bb0e-7175c15b7f37
    resourceVersion: "7493"
    uid: f9523718-bdad-48dc-b231-734bac9c7d53
  spec:
    containers:
    - command:
      - "false"
      image: busybox:latest
      imagePullPolicy: Always
      name: "false"
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-hqgzv
      secret:
        defaultMode: 420
        secretName: default-token-hqgzv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      message: 'containers with unready status: [false]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      message: 'containers with unready status: [false]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://539b846c6683a6f02a70b2155c77f4b783ba0bdf9336ef93dd406458c7843468
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:49dae530fd5fee674a6b0d3da89a380fc93746095e7eca0f1b70188a95fd5d71
      lastState:
        terminated:
          containerID: docker://539b846c6683a6f02a70b2155c77f4b783ba0bdf9336ef93dd406458c7843468
          exitCode: 1
          finishedAt: "2021-01-06T15:44:14Z"
          reason: Error
          startedAt: "2021-01-06T15:44:14Z"
      name: "false"
      ready: false
      restartCount: 35
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=false pod=crash-loop-7665f6d468-c5kwh_default(f9523718-bdad-48dc-b231-734bac9c7d53)
          reason: CrashLoopBackOff
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.3
    podIPs:
    - ip: 172.17.0.3
    qosClass: BestEffort
    startTime: "2021-01-06T13:07:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-06T13:07:37Z"
    generateName: delete-me-once-584c74ccf5-
    labels:
      app: delete-me-once
      pod-template-hash: 584c74ccf5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d857522a-9ae0-4e31-a458-330f241310fd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"true"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T13:07:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T13:10:16Z"
    name: delete-me-once-584c74ccf5-hmb77
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: delete-me-once-584c74ccf5
      uid: d857522a-9ae0-4e31-a458-330f241310fd
    resourceVersion: "746"
    uid: 3db6f913-cc23-4e70-9c08-7bdcb73eb8c1
  spec:
    containers:
    - command:
      - sleep
      - 9999d
      image: busybox:latest
      imagePullPolicy: Always
      name: "true"
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-hqgzv
      secret:
        defaultMode: 420
        secretName: default-token-hqgzv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:10:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:10:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://967b51dffe07684eeaa6dd8c93a572eb1562e9ac5d0ea020498fd4a6df0e59e4
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:49dae530fd5fee674a6b0d3da89a380fc93746095e7eca0f1b70188a95fd5d71
      lastState:
        terminated:
          containerID: docker://0518c93817b136b9a06b0c65649cde4901dcb0efdd5fac603cdb8a543bd54d04
          exitCode: 137
          finishedAt: "2021-01-06T13:10:12Z"
          reason: Error
          startedAt: "2021-01-06T13:08:01Z"
      name: "true"
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-01-06T13:10:15Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.4
    podIPs:
    - ip: 172.17.0.4
    qosClass: BestEffort
    startTime: "2021-01-06T13:07:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-06T13:07:36Z"
    generateName: rabbitmq-container-port-66fdd44ccd-
    labels:
      app: rabbitmq-container-port
      pod-template-hash: 66fdd44ccd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b19beb2d-d9a3-4fc7-b47a-f96e3b37f0b6"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T13:07:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.2"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T13:08:45Z"
    name: rabbitmq-container-port-66fdd44ccd-pk7rv
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rabbitmq-container-port-66fdd44ccd
      uid: b19beb2d-d9a3-4fc7-b47a-f96e3b37f0b6
    resourceVersion: "646"
    uid: 6d0e2a22-50ab-492f-a303-d477f3d8e3de
  spec:
    containers:
    - image: rabbitmq:latest
      imagePullPolicy: Always
      name: rabbitmq
      ports:
      - containerPort: 5672
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5672
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-hqgzv
      secret:
        defaultMode: 420
        secretName: default-token-hqgzv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://35de2017cb16bfd1423d9b9f567f647f687a3fdc0f855fe2535ff81de7adf04f
      image: rabbitmq:latest
      imageID: docker-pullable://rabbitmq@sha256:1fc999fbdd8054b0c34c285901474f136792ad4a42d39186f3793ac40de04dba
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T13:08:00Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.2
    podIPs:
    - ip: 172.17.0.2
    qosClass: BestEffort
    startTime: "2021-01-06T13:07:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      glouton.check.ignore.port.4369: TruE
      glouton.check.ignore.port.5671: "on"
    creationTimestamp: "2021-01-06T13:07:36Z"
    generateName: rabbitmq-labels-74cfb594d8-
    labels:
      app: rabbitmq-labels
      pod-template-hash: 74cfb594d8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:glouton.check.ignore.port.4369: {}
            f:glouton.check.ignore.port.5671: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aecf5309-8c0b-4647-b27b-c9b41d2e25ef"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T13:07:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T13:08:02Z"
    name: rabbitmq-labels-74cfb594d8-zfdmb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rabbitmq-labels-74cfb594d8
      uid: aecf5309-8c0b-4647-b27b-c9b41d2e25ef
    resourceVersion: "583"
    uid: 173e7224-1fef-485d-bb72-30d45e46a551
  spec:
    containers:
    - image: rabbitmq:latest
      imagePullPolicy: Always
      name: rabbitmq
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-hqgzv
      secret:
        defaultMode: 420
        secretName: default-token-hqgzv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://035094872e87d77cc4a1ed894248c8cd3283457d6885108324f95c74649062f6
      image: rabbitmq:latest
      imageID: docker-pullable://rabbitmq@sha256:1fc999fbdd8054b0c34c285901474f136792ad4a42d39186f3793ac40de04dba
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T13:08:02Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.6
    podIPs:
    - ip: 172.17.0.6
    qosClass: BestEffort
    startTime: "2021-01-06T13:07:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      glouton.enable: "off"
    creationTimestamp: "2021-01-06T13:07:36Z"
    generateName: redis-memcached-56dfc4cbfc-
    labels:
      app: redis-memcached
      pod-template-hash: 56dfc4cbfc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:glouton.enable: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"17be52fa-7a77-42b9-a9fc-a3eafcc0af43"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"a-memcached"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"the-redis"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6363,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T13:07:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T13:08:44Z"
    name: redis-memcached-56dfc4cbfc-2m2cq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-memcached-56dfc4cbfc
      uid: 17be52fa-7a77-42b9-a9fc-a3eafcc0af43
    resourceVersion: "642"
    uid: c5bced17-e72c-4668-8329-76fa19cda44e
  spec:
    containers:
    - image: redis:latest
      imagePullPolicy: Always
      name: the-redis
      ports:
      - containerPort: 6363
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    - image: memcached:latest
      imagePullPolicy: Always
      name: a-memcached
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 11211
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hqgzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-hqgzv
      secret:
        defaultMode: 420
        secretName: default-token-hqgzv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:08:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T13:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://343a08aa54b463ed783a7b847902f70c0fca63f5d1f16f10cb4cee97904b4f84
      image: memcached:latest
      imageID: docker-pullable://memcached@sha256:944f6eb53be39dfcb895ab110d685e4f0320ffa00b8a1c0fe35aeb52f4f89d30
      lastState: {}
      name: a-memcached
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T13:08:36Z"
    - containerID: docker://ffb768523fa85dd12cf0e35d11b764c5df747a243532ef29855137a52a849726
      image: redis:latest
      imageID: docker-pullable://redis@sha256:0f724af268d0d3f5fb1d6b33fc22127ba5cbca2d58523b286ed3122db0dc5381
      lastState: {}
      name: the-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T13:08:29Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.5
    podIPs:
    - ip: 172.17.0.5
    qosClass: BestEffort
    startTime: "2021-01-06T13:07:37Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
