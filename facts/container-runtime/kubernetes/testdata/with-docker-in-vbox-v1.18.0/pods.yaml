apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-06T16:02:42Z"
    generateName: crash-loop-69d9bb77f9-
    labels:
      app: crash-loop
      pod-template-hash: 69d9bb77f9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"87c0877b-aa5e-404b-8cde-d9e0fd2a9186"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"false"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T16:02:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.88.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T16:04:15Z"
    name: crash-loop-69d9bb77f9-5w47z
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: crash-loop-69d9bb77f9
      uid: 87c0877b-aa5e-404b-8cde-d9e0fd2a9186
    resourceVersion: "744"
    selfLink: /api/v1/namespaces/default/pods/crash-loop-69d9bb77f9-5w47z
    uid: 6e6c7282-ce65-4231-a1d9-3e627c388c33
  spec:
    containers:
    - command:
      - "false"
      image: busybox:latest
      imagePullPolicy: Always
      name: "false"
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-5msb5
      secret:
        defaultMode: 420
        secretName: default-token-5msb5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      message: 'containers with unready status: [false]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      message: 'containers with unready status: [false]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a71dcbca152324ca5efe0432c34edcd1058a5778185158983846421ea8914710
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:49dae530fd5fee674a6b0d3da89a380fc93746095e7eca0f1b70188a95fd5d71
      lastState:
        terminated:
          containerID: docker://a71dcbca152324ca5efe0432c34edcd1058a5778185158983846421ea8914710
          exitCode: 1
          finishedAt: "2021-01-06T16:04:01Z"
          reason: Error
          startedAt: "2021-01-06T16:04:01Z"
      name: "false"
      ready: false
      restartCount: 2
      started: false
      state:
        waiting:
          message: back-off 20s restarting failed container=false pod=crash-loop-69d9bb77f9-5w47z_default(6e6c7282-ce65-4231-a1d9-3e627c388c33)
          reason: CrashLoopBackOff
    hostIP: 192.168.99.118
    phase: Running
    podIP: 10.88.0.7
    podIPs:
    - ip: 10.88.0.7
    qosClass: BestEffort
    startTime: "2021-01-06T16:02:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 10.244.120.65/32
      cni.projectcalico.org/podIPs: 10.244.120.65/32
    creationTimestamp: "2021-01-06T16:02:43Z"
    generateName: delete-me-once-69c996b98d-
    labels:
      app: delete-me-once
      pod-template-hash: 69c996b98d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d105a5c2-b2ed-400f-8e59-325ae5d72ecb"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"true"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T16:02:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2021-01-06T16:03:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.244.120.65"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T16:03:50Z"
    name: delete-me-once-69c996b98d-rp9fl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: delete-me-once-69c996b98d
      uid: d105a5c2-b2ed-400f-8e59-325ae5d72ecb
    resourceVersion: "709"
    selfLink: /api/v1/namespaces/default/pods/delete-me-once-69c996b98d-rp9fl
    uid: f2d62dbb-708e-41b1-8ccc-7ed7ebed0326
  spec:
    containers:
    - command:
      - sleep
      - 9999d
      image: busybox:latest
      imagePullPolicy: Always
      name: "true"
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-5msb5
      secret:
        defaultMode: 420
        secretName: default-token-5msb5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://40a2d7f07a4213e67c9039c17d359014476a2020296ebc5e1b47c4d4b4224610
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:49dae530fd5fee674a6b0d3da89a380fc93746095e7eca0f1b70188a95fd5d71
      lastState:
        terminated:
          containerID: docker://5dbe9891d1476b866897f90f3bf51f2e12f9484c431c3b8690936b0f7f0c7d97
          exitCode: 137
          finishedAt: "2021-01-06T16:03:44Z"
          reason: Error
          startedAt: "2021-01-06T16:03:20Z"
      name: "true"
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-01-06T16:03:50Z"
    hostIP: 192.168.99.118
    phase: Running
    podIP: 10.244.120.65
    podIPs:
    - ip: 10.244.120.65
    qosClass: BestEffort
    startTime: "2021-01-06T16:02:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-06T16:02:42Z"
    generateName: rabbitmq-container-port-68c84fdd9-
    labels:
      app: rabbitmq-container-port
      pod-template-hash: 68c84fdd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5fd64d74-131b-471e-9e9e-7f9b0ed89190"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T16:02:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.88.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T16:03:52Z"
    name: rabbitmq-container-port-68c84fdd9-w5cdk
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rabbitmq-container-port-68c84fdd9
      uid: 5fd64d74-131b-471e-9e9e-7f9b0ed89190
    resourceVersion: "716"
    selfLink: /api/v1/namespaces/default/pods/rabbitmq-container-port-68c84fdd9-w5cdk
    uid: 22b46f0b-ce48-4c0a-a70e-8b4596ef83fc
  spec:
    containers:
    - image: rabbitmq:latest
      imagePullPolicy: Always
      name: rabbitmq
      ports:
      - containerPort: 5672
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5672
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-5msb5
      secret:
        defaultMode: 420
        secretName: default-token-5msb5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8621fe83ccb9ad96da3b250d138c165d69ad3754053a61e99c980f4ce0dbc897
      image: rabbitmq:latest
      imageID: docker-pullable://rabbitmq@sha256:1fc999fbdd8054b0c34c285901474f136792ad4a42d39186f3793ac40de04dba
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T16:03:17Z"
    hostIP: 192.168.99.118
    phase: Running
    podIP: 10.88.0.4
    podIPs:
    - ip: 10.88.0.4
    qosClass: BestEffort
    startTime: "2021-01-06T16:02:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      glouton.check.ignore.port.4369: TruE
      glouton.check.ignore.port.5671: "on"
    creationTimestamp: "2021-01-06T16:02:42Z"
    generateName: rabbitmq-labels-7fbb75dcd7-
    labels:
      app: rabbitmq-labels
      pod-template-hash: 7fbb75dcd7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:glouton.check.ignore.port.4369: {}
            f:glouton.check.ignore.port.5671: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e58e31d7-963c-40f1-8bf3-1d50dc2e0d71"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T16:02:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.88.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T16:03:22Z"
    name: rabbitmq-labels-7fbb75dcd7-h6t28
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rabbitmq-labels-7fbb75dcd7
      uid: e58e31d7-963c-40f1-8bf3-1d50dc2e0d71
    resourceVersion: "632"
    selfLink: /api/v1/namespaces/default/pods/rabbitmq-labels-7fbb75dcd7-h6t28
    uid: f071e8b4-0b84-4d02-bdb7-60a817874385
  spec:
    containers:
    - image: rabbitmq:latest
      imagePullPolicy: Always
      name: rabbitmq
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-5msb5
      secret:
        defaultMode: 420
        secretName: default-token-5msb5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f51d48c545596c5e082f6a389b35a0118f4e8747082bdc8f6c8a59ec5b8aaeb7
      image: rabbitmq:latest
      imageID: docker-pullable://rabbitmq@sha256:1fc999fbdd8054b0c34c285901474f136792ad4a42d39186f3793ac40de04dba
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T16:03:22Z"
    hostIP: 192.168.99.118
    phase: Running
    podIP: 10.88.0.6
    podIPs:
    - ip: 10.88.0.6
    qosClass: BestEffort
    startTime: "2021-01-06T16:02:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      glouton.enable: "off"
    creationTimestamp: "2021-01-06T16:02:42Z"
    generateName: redis-memcached-78f799c9c8-
    labels:
      app: redis-memcached
      pod-template-hash: 78f799c9c8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:glouton.enable: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"20305a67-208b-492f-bba0-228fdfeffc62"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"a-memcached"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"the-redis"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6363,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-06T16:02:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.88.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-06T16:03:50Z"
    name: redis-memcached-78f799c9c8-2gzks
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-memcached-78f799c9c8
      uid: 20305a67-208b-492f-bba0-228fdfeffc62
    resourceVersion: "711"
    selfLink: /api/v1/namespaces/default/pods/redis-memcached-78f799c9c8-2gzks
    uid: f62b1b74-686e-43ae-9cf6-342b5bdbbda6
  spec:
    containers:
    - image: redis:latest
      imagePullPolicy: Always
      name: the-redis
      ports:
      - containerPort: 6363
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    - image: memcached:latest
      imagePullPolicy: Always
      name: a-memcached
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 11211
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-5msb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-5msb5
      secret:
        defaultMode: 420
        secretName: default-token-5msb5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-06T16:02:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d4a8b68f5f47a7388598e924981ac88d1489abbc8e4175bf4a5fd0f8ce02718a
      image: memcached:latest
      imageID: docker-pullable://memcached@sha256:944f6eb53be39dfcb895ab110d685e4f0320ffa00b8a1c0fe35aeb52f4f89d30
      lastState: {}
      name: a-memcached
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T16:03:49Z"
    - containerID: docker://d04d3b4d7eec381acd22ec697a066b8be0525089e6ebdf2b15529aa1f796e910
      image: redis:latest
      imageID: docker-pullable://redis@sha256:0f724af268d0d3f5fb1d6b33fc22127ba5cbca2d58523b286ed3122db0dc5381
      lastState: {}
      name: the-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-06T16:03:25Z"
    hostIP: 192.168.99.118
    phase: Running
    podIP: 10.88.0.8
    podIPs:
    - ip: 10.88.0.8
    qosClass: BestEffort
    startTime: "2021-01-06T16:02:43Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
